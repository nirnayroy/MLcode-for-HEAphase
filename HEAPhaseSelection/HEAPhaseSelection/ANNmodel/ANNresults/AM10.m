function [Y,Xf,Af] = AM10(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 01-Mar-2019 20:56:04.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = Qx10 matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = Qx1 matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0.867076923076923;437.535;0;0.198515243345873;1.1657;0;1.61538461538462;0;25765000000;0.484122918275927];
x1_step1.gain = [2.08211997670356;0.000699024104098669;0.0588456417471217;1.00064574972844;1.51941046873813;4.00249121426347;0.196969696969696;0.369863360727655;7.26043023634097e-12;0.0144813358040795];
x1_step1.ymin = -1;

% Layer 1
b1 = [1.7778087491486045391;-1.7434084586686757756;1.693875286017430426;-1.5778419358307707032;-0.15259594883149102396;0.78093306974607246129;-3.1593504181742733117;2.1841619044027251739;-1.2776613984452993567;-1.6317295318351403566;0.78157421747566735437;0.75141250067144071956;0.31677101607983682019;0.2235547892771119205;0.81961951733921933894;-1.0716577576198866861;-1.6460618871074370606;-0.74928682197571061518;2.0843885440682594634;-1.9649522895070741235];
IW1_1 = [-0.37132163366783665914 -0.93781370123660567906 -0.52758233321325243015 0.20558924617437379645 -0.42742612384350342492 0.22853918488485777671 -1.2875724878627554659 -0.92415369383956358362 -0.67113427736953923386 1.1191811342162762966;0.84267576621260642522 -0.52831481521471512774 -0.0027107885248336301143 -1.0670513177678970784 -0.54923540381023894241 -1.1128662815869450053 1.9998509724932154175 0.93040227331188340987 -0.67195899418043347762 -0.43480367648550233284;-0.13708397875157940504 0.64580551124776897076 -0.64045432986501438233 -0.54008494535572726392 0.1485083780745365678 0.73345345595979838382 0.73937319730958084296 -0.33191909581733619605 -0.67778897545394067858 -0.87762853729536649539;0.13713976267721381119 0.1237460401588651171 0.46551263723217695123 -0.04412264280798540439 -0.96043679572904805397 -0.38947106180274337905 -1.0287873598550487664 0.67745951362257050832 0.56012763982229063497 0.27107354231335867301;-0.98961145784411197468 -1.301690712744713041 -0.4229475872553478677 2.7486094308803656894 -0.89411853488440096172 -2.7217222358128565496 1.0994804358503516006 0.70674576725889393103 -1.4514805065659315275 -1.4703081865330331901;-3.333306581565028015 -1.8704094522228218445 -1.5156848848373103422 2.926002902803201966 0.57079633894264525384 -1.1047904332989264553 0.30468669959877764386 -1.1404434746497251751 0.72526413214748575164 2.3217332271046715597;2.0860497492794398688 0.91377878896079789417 -2.4393479922019167816 -0.018621415509156684365 0.26237190785092345813 -2.247759861384708735 0.48145007531349748309 -0.18954740046947124443 1.0358683629927520897 -1.6864756201773116739;0.3026585312414472595 0.088969233959105192833 2.2685241721845450513 -1.415004987087549182 -0.8376511260584130758 -0.45276723229733772946 1.7125138063940603672 0.76073636124165622263 -0.19393012458965833145 0.54626598877622578598;0.92147956263973529456 -0.01729861702719033556 0.57097691511607062687 0.010484962943632247442 2.5001639142156619755 -0.058510759071136411724 1.7167640437473552506 0.36546986470999437424 0.27402342067567375672 -0.30269719681219930951;-1.363224902637635072 -2.0526883910978637182 0.91713843709374665014 2.6406790980518732859 -1.1854104113368084672 -0.34218018738106770193 1.7752149846487814688 -1.413671665327787208 -1.3791387354710185065 -2.8520180144726086091;1.7781006314312759464 4.0943686060662471959 -0.047624706861034593608 0.93412968433571375027 0.26840052750624354694 -0.31893481901670833745 1.2005404723605084261 -0.15874580953694994445 -0.206083824153845796 0.43202500480923650139;0.20556550188526478973 -0.58474290963973984958 0.74436355668079856596 -0.41473179193197262649 0.49383249714187554824 0.94623143526211106469 -0.11990747822531575006 -0.69742952850111028518 -0.92564712600061671566 0.62617489961398309362;0.34715263049736372336 -1.2651902784930681989 0.02615798264962448938 -0.60905573701063775438 2.0758488279652400621 0.21669488770619432794 0.53644338373417344012 -1.537571223630803896 -0.32139461493487131438 -0.74115557049721847438;-0.66728491165075676239 0.25572889677963694943 -0.75172964695240429567 0.58119807469593998128 -0.67646520567314505357 -1.564714810576717019 0.91122474428333521956 0.085062173703726678964 -0.091018857571785488636 -1.1067083830324182525;0.89256912286337242168 -0.14442488382641283096 0.67141484462997047533 2.0472363794594494735 0.60790755857614298119 -0.95142261864155897033 -0.1525436877771682298 -1.3113473582410690721 -0.86630813468162748414 0.34774321521928985845;-0.30101889631937950309 -0.050897288872922705205 0.14210478401632856138 1.0713569230117712117 -0.77098390776998226848 -0.22791212323011730834 -0.78099286806756273993 0.85974818579320244627 -0.36885631003711599751 0.44199655371654500424;0.17930055176032874686 1.2898098595668598954 -1.6090400699792004602 0.014600005620527680555 0.33662038054583309776 -0.41563238267811652982 0.20087721370029226753 -0.76895969006251407851 1.904826104720338753 1.4321000134967485362;-0.29361588535520855014 -0.83073412478119268432 0.34712777397921157352 0.024438347030740423249 -0.53875044464416443901 1.2801866491167526174 -0.37656245830555989951 -0.54530644487663559872 0.95887638872012115332 1.0041574000763462404;1.2353520396747854626 0.94962640153327626535 1.3159782022089776543 1.8347298040416690768 -0.4465875669434441475 0.25330839025300527778 -0.28469168491829699441 -3.008846509013983983 0.65355736275550269099 -0.6504936198192765584;-0.19607929894045930674 1.0165735104636843822 -0.31866081688817932127 -0.32665697755854972151 -1.2921315812907023801 -0.0076555964850749643261 -0.1062659434480249937 0.67631248443974611995 -0.19259320219886150172 0.021593504763488133302];

% Layer 2
b2 = -1.7036750947897811859;
LW2_1 = [-2.6936647246698326441 -1.2555938290570780591 -1.7711501381648628861 1.1312512520279716099 3.9851895617734336419 -3.7550965844353072498 -3.5114630767512546861 2.3890892709373416913 2.6747132322921354231 -4.2241692219240380979 3.1557165235789796931 0.36534452346836215897 -1.7932280515889758021 1.2462012607339272297 1.5548112351088618777 0.83514178941155048363 -2.1392822760012806249 -0.37563476837111953177 2.6183278495152264576 2.0162606510284679651];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
    X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},1); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    X{1,ts} = X{1,ts}';
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = logsig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Output 1
    Y{1,ts} = a2;
    Y{1,ts} = Y{1,ts}';
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
    Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Positive Transfer Function
function a = logsig_apply(n,~)
a = 1 ./ (1 + exp(-n));
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

function [Y,Xf,Af] = AM5(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 05-Mar-2019 11:20:44.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = Qx5 matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = Qx1 matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [437.535;0;1.61538461538462;0;25765000000];
x1_step1.gain = [0.000699024104098669;0.0588456417471217;0.196969696969696;0.369863360727655;7.26043023634097e-12];
x1_step1.ymin = -1;

% Layer 1
b1 = [-2.8700454084293505197;-1.2474727464357135975;-2.213333233399534361;-1.7171482701509606095;1.6134154067569133062;0.52285596052446614568;-2.5057714913450768179;0.44029717077643620859;-0.63592699835028265731;-1.6507356502920642605;-2.398551299082291699;0.44969005192325650633;-1.3378453427528775865;-1.3632167846837610625;-1.1486907487156026164;-1.1906934552964700824;1.7360921982380397299;3.3331507219136633502;-2.281987670196131468;2.6753569612440499803];
IW1_1 = [0.85798895683440212778 1.3567476322498306374 -0.70884994587895699958 1.1236262514586836669 1.233647347595913546;1.1189370956898350151 -0.88827965973137135158 -2.3191498416958395978 1.5471928708195352709 -2.9062481472661993998;1.0632146006100196001 -3.4907946170098278493 -0.85125019398774515178 -1.0069831457982523215 1.6843005039706810955;0.92883709404758540984 0.60983282116972814535 1.0344487302104035109 -0.99764541581810617377 -1.7349095079349741155;-2.5212405079826365473 -0.515683458976808895 -1.0482616474837962439 1.0998788379075914445 -0.30602799413247122606;0.43519931221840857383 -0.46349540392659377419 -2.712462439496695854 0.57526198731248168183 -1.3719891181926047174;0.41782009158008948102 -1.5533414934430875842 -0.71122485874916829829 2.6626939639598283804 -3.6996091305226004309;-1.5988926009649677695 0.72237117078153123551 -0.84606407619609613757 1.4389126729980208363 0.69831900532087731737;1.3961211236715707074 -1.049121187678646816 0.4023638192415158743 -1.7758627517854987943 0.65818496353215993899;-2.8631857021649094186 -3.075036644939763697 1.7755838410560336182 1.9107392301577106331 3.0955181964886722135;0.18358533157598280749 -2.4825211033761775958 1.4600815802126378973 0.39923652381044277826 -3.0462403215562554593;3.3921653768335517931 0.18226856232874782959 2.121542908849405773 3.0855081643996080665 5.165224184583934175;-2.8115509250927859242 -1.8149411632823031493 -2.4452661269763558138 1.3458557555993655441 0.89655687826783103667;-0.58806341145477980525 1.3122271278415142959 -0.52672930805610529426 -1.0492007819996853613 1.6081914607677227913;-2.7682447084613643895 -0.01678504260825273986 4.0004127777683375911 -1.7158977187393942287 -1.4968096257433456397;-1.6323923130196722475 -1.2200843759599324656 -1.0975826885659538679 1.1666662485801087001 -0.52252594112768502299;0.036141148908012038499 -0.46312862239670388176 -4.4350526444114937163 0.94836706502639134264 -0.39006146297749716423;3.0455626694097803764 -0.42109423745726076715 -0.82949518760691054453 1.1872501373850981032 3.187669901844667919;-1.435446570291392554 0.54278985560583037362 1.2143540718866763228 -1.5675236389921876068 0.38077955281735104132;0.97791678916788704612 0.71781501407753167676 1.3064441420595738208 1.4829803006346402583 1.1933432550039160258];

% Layer 2
b2 = -0.31459494008335536774;
LW2_1 = [0.95456817205574717722 3.0714302128816850512 -4.5341999600278724003 0.18455880981334793489 1.3983930055855793295 -0.71860136010097452886 3.3711942867823898595 -0.2799109122618761436 0.87258763762207081083 -2.912996013863483391 2.6768957802584001371 4.9035218631578567638 -2.8591330984508376289 -0.62114428483572281525 -2.4070932112435721173 -1.1187532705134812794 -3.2004955034429194427 4.2482579084377078971 0.29625926465575364022 -0.76539544100024237139];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
    X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},1); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    X{1,ts} = X{1,ts}';
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = logsig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Output 1
    Y{1,ts} = a2;
    Y{1,ts} = Y{1,ts}';
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
    Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Positive Transfer Function
function a = logsig_apply(n,~)
a = 1 ./ (1 + exp(-n));
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

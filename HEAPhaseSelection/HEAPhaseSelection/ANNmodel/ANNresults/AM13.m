function [Y,Xf,Af] = AM13(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 20-Feb-2019 20:14:01.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = Qx13 matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = Qx1 matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0.867076923076923;0.00279595827039172;437.535;5.12923152138799;-76.44;0;0.198515243345873;1.1657;0;1.61538461538462;0;25765000000;0.484122918275927];
x1_step1.gain = [2.08211997670356;6.05469648797198;0.000699024104098669;0.0016871699604234;0.0231642344220524;0.0588456417471217;1.00064574972844;1.51941046873813;4.00249121426347;0.196969696969696;0.369863360727655;7.26043023634097e-12;0.0144813358040795];
x1_step1.ymin = -1;

% Layer 1
b1 = [-1.800949694044750915;1.5461789866598134591;1.4573115337959072768;-2.0949605119507950235;-2.8045197091822355873;-0.089550486520121083678;0.78450898491010634395;0.65192385021126253442;-1.003408641331090756;-0.60134268029244641873;-1.3170733651864181546;-0.013912783931154554251;1.5060105605770541803;-0.51941083709234125987;0.8959254377928487223;-1.3979910338342680376;1.6583886748956844226;-1.4358118448826575619;1.5649815112481373358;1.7949416753167255489];
IW1_1 = [0.50749909695706463264 0.36861604917424695138 -0.3878912420500533198 0.47683346653635377832 0.054878857175123203771 0.35323043063932041408 -0.69895220384414724624 -0.1413903033262201292 -0.21935257164968335886 -0.57816265861981186447 0.61533774995179313372 0.87607291046826840653 -0.26582100715832873705;-1.0798010982018573234 2.063181706783279612 0.50130561858318656299 -0.67413994345984318279 0.29757052471157241502 0.77880318963274142163 -1.6623920277297705717 -0.0045674523045870583232 0.4693382522520977429 -0.01853167863068511112 0.96325082046117771473 0.2895018856756681469 0.812922854080586621;-0.49332581178013457102 0.15564207847375433058 0.41098919068485956219 -1.1129858893229158667 -0.24781217291639512368 -0.48476312535267696013 -0.34296526211412137197 0.64212639056474485333 0.23904845996833581911 0.46503881506158251113 0.049234685762397437103 -0.16226237123848913368 -0.50754598248245552661;2.0505567390128578431 0.40564311008931802638 2.2103784007927753663 0.24922147931899643614 -0.11503626953385219511 -0.12330296426748438288 -3.2931756017176914142 -2.2294892061307716169 0.24356106880737643516 -0.81838506810689426452 1.9389613623028576495 -0.85550499291873727259 -1.547049351355871849;0.85253314417283310167 -0.67172301092978181636 -1.0130667484467035244 -0.21908651169600015796 -0.022764989290504397679 -1.1659740206903554949 1.3813618988958877853 -0.81610507253796527039 -1.7296016670765173018 0.64023615506720921164 0.24541212599935369187 0.3373786033468539336 -0.63863154879193828606;0.38987689971044559023 -0.43984791719880689254 -0.31537665976839940329 -0.68670916483771682337 0.8250350876557098756 -0.017738731561735783526 -0.63179005747012118022 0.75471443974222551798 -1.339391030047162312 1.2471128919521523581 1.6579344156827013901 -0.01062144702302815838 0.67607992254170923285;-0.19476108594496530091 1.4172601219109235426 1.0460533172800454693 -0.96019428003604456734 0.34800589788988361972 -1.4620829630101654928 -0.13124303666453163153 -0.44662330082827639277 -1.0485204034022530539 0.037791533603678609254 -1.1658387459441452716 0.54795294016309059604 0.93385484629305992588;-0.5357233081140249098 -0.37915928322598163591 0.29165935195003123148 -1.2529476173496716385 -0.95723124140607729338 -0.10581919478631095222 -0.64400144087265898118 1.3990942194249607056 0.14984386939205185385 1.3651254185540306896 -1.0209586212575059161 -0.49901260387196078039 -1.0441017236007548163;-0.171502223751693883 -0.91564861078207060441 -0.21862492597166666153 0.68634021977928627578 -0.65554837416347699897 1.5099424023397849393 2.0321509403375856984 0.32890843276100706349 0.40955367816731869102 -0.67064667522841736602 -1.7237164609883772748 -0.58784166482870137127 -2.186254181014069875;0.041546079148092218691 1.861480342308428515 -0.81240950715181203812 0.20447692642651027484 -0.24747730041219889729 0.16647674819201219165 -1.4202361944172154917 0.17145901409952044037 1.8945804064180338244 0.054606211897027599755 -0.75882560069248861101 -0.36586355078339233282 -0.21263455979769876891;-0.63006197488700388387 0.3371225425423726163 -1.2677010133427271121 0.074769534763908851449 1.8288483601362226505 -1.8071698314374151639 -1.8990656851673917149 0.096599550209227308395 -0.32642274442248048194 -2.5130175143973731977 -0.16074839085495024049 -0.20566104755490977052 1.3220615769554833197;0.31252388245072210138 -0.71704404838829227664 0.30806344289378939649 0.86607062272375912038 0.25462325371046923284 0.16054900906545763184 0.63675265438436856602 -0.77793314065849106242 -0.26937472869636686079 -0.75160168334494081854 -0.39842663703254826979 -0.12181496472778041706 -0.11220946938984922847;0.97197756030929671756 0.44604582602171227723 -0.43590596540160653216 0.10268176524288533114 -0.25107724755673765937 1.991167754422943359 0.22010450561407546299 0.62998983178066947364 0.3563497645388677415 0.18472885483187748146 -1.7300063201701980642 -1.5680154636112264566 0.23949818365395789121;-0.33136723495888859015 0.92369050394440765928 0.40773716764344303254 0.32394870440460332706 -0.60459545355279253886 0.54726625536052153631 -0.062951882945403853098 -0.47371407428162437547 -0.54296480802847701952 0.055056111593282823502 -0.55135403989939135716 0.50649171309698404198 -0.47704045144128270906;0.62032789990139525216 0.93622689602897257721 -0.28564911353255206805 0.087448372310563654564 -1.2899606775899274957 0.10653311110913640802 0.95854817354007448849 0.23632225187315156201 -1.0344017143120720625 -1.0633887404410888866 -1.2297313367215134683 0.094203075957662710249 -0.79237686191334266717;-0.39971375804456027447 0.69055111975923699763 -0.19131198735291291002 0.48740256127690495536 0.35943995582804988409 -0.1529482754665998645 0.69643504517010867971 -0.54335233242241021134 0.21418691201498710197 -0.020481123617289265226 0.62578655315116316071 -0.1203538333492192719 -0.26767996870402777088;0.84519315838511366312 0.50103333948461836744 0.76451961989708183687 -0.59487384465535553257 -0.65227573904530211646 0.045512050516910124154 0.67518068559294608377 0.3294258822117578922 1.277761018729213216 -0.8919915442766914726 -1.1937341795894114149 -0.1896173799981576702 -0.0069820371558722976735;-0.76831083345732520407 0.30854981688634386394 -0.49344564965364573483 -0.052831318728709664168 0.032881365476209907517 0.4473306423476822169 0.76605743946761739593 0.29586219769057892082 -0.19728994052251255797 0.61371232716685752973 0.5934286826819887839 0.61656753197862002036 -0.60265213721797949997;0.75341793740867735174 -0.31084784208447585607 0.91145465467071618004 -0.72326985931248100048 0.47632068775969627072 3.2018186844054272733 1.8212484350371362929 0.29152129211859373337 -0.48008543571531048233 0.6809390000793095199 -0.65204373713564189874 -1.2772918502626096071 -0.92830201091112996004;0.46717206566684266189 0.07686463004276383737 -0.25532633682867039715 0.93152974621161144242 0.38572538734947381389 0.06403602201561366114 -0.65632135229908905583 -1.1318797560425883919 -0.086677790895896889012 -0.20709577313772586926 -0.50171817534642881853 0.21635315993177628435 0.35785537178671639191];

% Layer 2
b2 = -1.3886003245521774119;
LW2_1 = [0.36456222173063546066 1.9999433300144922043 -2.0605709488791177364 3.7168723499101008478 -2.8549242228679156952 1.3213893237469103159 1.9357494879980126079 -2.2422824321170908846 -3.1017610366469314798 -2.1430211142487070042 -3.4279536134022743354 0.62024150198836769388 2.1673303671443675533 0.2014384914763769352 1.4475360876991620884 0.95598291723786021912 1.1438210532409289755 0.98504574421540269658 3.46634581472938752 -1.412906629915621437];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
    X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},1); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    X{1,ts} = X{1,ts}';
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = logsig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Output 1
    Y{1,ts} = a2;
    Y{1,ts} = Y{1,ts}';
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
    Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Positive Transfer Function
function a = logsig_apply(n,~)
a = 1 ./ (1 + exp(-n));
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end
